<?php
/**
 * @file The main plugin for iMoneza
 * 
 * It is necessary to have some of these hooks in the `module-name.module` file otherwise Drupal won't find them.
 * 
 * @author Aaron Saray
 */

/** load in my own composer stuff for this moment */
require_once 'vendor/autoload.php';

/**
 * Only used to debug connection items
 */
define('IMONEZA_DEBUG', true);

/**
 * Implements hook_menu()
 *
 * This generates an iMoneza menu item at the main level.
 *
 * @return array
 */
function imoneza_menu() {
  $iMoneza = \iMoneza\Drupal\App::getInstance();
  return $iMoneza->menu();
}

/**
 * Implements hook_permission()
 *
 * This creates a section in the permissions admin area to allow permissions for this module.
 * @return array
 */
function imoneza_permission() {
  $iMoneza = \iMoneza\Drupal\App::getInstance();
  return $iMoneza->permissions();
}

/**
 * Implements hook_theme()
 *
 * @return array
 */
function imoneza_theme() {
  $iMoneza = \iMoneza\Drupal\App::getInstance();
  return $iMoneza->theme();
}

/**
 * Implements hook_help()
 * 
 * Displays help string for this module 
 * 
 * @param $path string
 * @param $arg mixed
 * @return null|string
 */
function imoneza_help($path, $arg) {
  $iMoneza = \iMoneza\Drupal\App::getInstance();
  return $iMoneza->help($path, $arg);
}

/**
 * Implements hook_forms()
 * 
 * Handles forms by the app
 * 
 * @param $formId
 * @param $args
 * @return array
 */
function imoneza_forms($formId, $args) {
  if (stripos($formId, 'imoneza_') === 0) {
    $iMoneza = \iMoneza\Drupal\App::getInstance();
    return [
        $formId =>  [
            'callback'  =>  array($iMoneza, 'form'),
            'callback arguments'  =>  array($formId)
        ]
    ];
  }
}

/**
 * Implements hook_init()
 * 
 * This will launch the admin notice configuration if we're in the admin
 */
function imoneza_init()
{
  $iMoneza = \iMoneza\Drupal\App::getInstance();

  $path = current_path();
  if (path_is_admin($path)) {
    $iMoneza->adminNoticeConfigNeeded();
  }
  else {
    $iMoneza->addClientSideAccessControl();
    $iMoneza->addServerSideAccessControl();
  }
}

/**
 * This is the ajax handler for all of our forms 
 * 
 * This must be in this file to be recognized - and since it does basically nothing, we'll leave it abstracted here
 * @param $form
 * @param $form_state
 * @return array
 */
function imoneza_form_ajax_handler($form, &$form_state)
{
  return $form;
}

/**
 * Add form values used for display
 * 
 * @todo can this be part of the form instead?
 * @param $variables array the variables for this view
 */
function imoneza_preprocess_imoneza_first_time_form(&$variables)
{
  $iMoneza = \iMoneza\Drupal\App::getInstance();
  $iMoneza->preprocessForm('imoneza_first_time_form', $variables);
}

/**
 * Add form values used for display
 *
 * @todo can this be part of the form instead?
 * @param $variables array the variables for this view
 */
function imoneza_preprocess_imoneza_access_form(&$variables)
{
  $iMoneza = \iMoneza\Drupal\App::getInstance();
  $iMoneza->preprocessForm('imoneza_access_form', $variables);
}

/**
 * Implements hook_form_alter()
 *
 * This is used to add the iMoneza settings to the node form
 * @param $form
 * @param $form_state
 * @param $form_id
 */
function imoneza_form_alter(&$form, &$form_state, $form_id)
{
  if ($form_id == 'article_node_form') {
    $iMoneza = \iMoneza\Drupal\App::getInstance();
    $iMoneza->addImonezaToNodeForm($form);
  }
}

/**
 * Callback for node submission
 * 
 * @param $form
 * @param $form_state
 */
function imoneza_node_submit_handler($form, $form_state)
{
  $iMoneza = \iMoneza\Drupal\App::getInstance();
  $iMoneza->nodeSubmitHandler($form, $form_state);
}

/**
 * Handle the pricing retrieval for this node
 * 
 * @param $nid
 * @return array
 */
function imoneza_ajax_pricing_get($nid)
{
  $iMoneza = \iMoneza\Drupal\App::getInstance();
  return $iMoneza->ajaxPricingGet($nid);
}

/**
 * Render the return result as json
 * 
 * @param $callbackData
 */
function imoneza_ajax_pricing_render($callbackData)
{
  print json_encode($callbackData);
}

/**
 * Cron item for imoneza settings update (once an hour)
 */
function imoneza_cron()
{
  $cronLast = variable_get('cron_last');
  if (time() > $cronLast + 3600) {
    $iMoneza = \iMoneza\Drupal\App::getInstance();
    $iMoneza->cron();
  }
}
